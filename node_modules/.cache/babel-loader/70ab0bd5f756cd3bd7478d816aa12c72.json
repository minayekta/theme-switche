{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mina/Downloads/theme-switcher/src/App.jsx\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport NameBox from \"./components/NameBox\";\nimport ThemeSwitcher from \"./components/ThemeSwitcher\";\nimport { THEME_TYPE } from \"./constants\";\nimport Styles from \"./data/Styles\";\nimport ThemeProvider from \"./providers/ThemeProvider\"; // No need to change *return* part in both StyleTag and App components\n// You have to set themeMode based on context\n\nconst StyleTag = () => {\n  const themeMode = THEME_TYPE.LIGHT;\n  return /*#__PURE__*/_jsxDEV(Helmet, {\n    children: /*#__PURE__*/_jsxDEV(\"style\", {\n      children: Styles(themeMode)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c = StyleTag;\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    children: [/*#__PURE__*/_jsxDEV(StyleTag, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NameBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ThemeSwitcher, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyleTag\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/home/mina/Downloads/theme-switcher/src/App.jsx"],"names":["React","Helmet","NameBox","ThemeSwitcher","THEME_TYPE","Styles","ThemeProvider","StyleTag","themeMode","LIGHT","App"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,aAAP,MAA0B,2BAA1B,C,CAEA;AACA;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAMC,SAAS,GAAGJ,UAAU,CAACK,KAA7B;AACA,sBACE,QAAC,MAAD;AAAA,2BACE;AAAA,gBAAQJ,MAAM,CAACG,SAAD;AAAd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAPD;;KAAMD,Q;;AASN,SAASG,GAAT,GAAe;AACb,sBACE,QAAC,aAAD;AAAA,4BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;MARQA,G;AAUT,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport NameBox from \"./components/NameBox\";\nimport ThemeSwitcher from \"./components/ThemeSwitcher\";\nimport { THEME_TYPE } from \"./constants\";\nimport Styles from \"./data/Styles\";\nimport ThemeProvider from \"./providers/ThemeProvider\";\n\n// No need to change *return* part in both StyleTag and App components\n// You have to set themeMode based on context\n\nconst StyleTag = () => {\n  const themeMode = THEME_TYPE.LIGHT;\n  return (\n    <Helmet>\n      <style>{Styles(themeMode)}</style>\n    </Helmet>\n  );\n};\n\nfunction App() {\n  return (\n    <ThemeProvider>\n      <StyleTag />\n      <NameBox />\n      <ThemeSwitcher />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}